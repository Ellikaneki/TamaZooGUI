/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package it.iiscastelli.tama.ui;

import it.iiscastelli.tama.data.Tamagotchi;
import it.iiscastelli.tama.data.TamaZoo;
import it.iiscastelli.tama.ui.model.TamaTableModel;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ely
 */
public class TabellaTamaZoo extends javax.swing.JPanel implements PropertyChangeListener {

    private TamaZoo zoo;
    private DefaultTableModel model;

    /**
     * Creates new form TabellaTamaZoo
     */
    public TabellaTamaZoo() {
        initComponents();
        model = new TamaTableModel();
        tableTama.setModel(model);
        for (int i = 0; i < tableTama.getColumnModel().getColumnCount(); i++) {
            tableTama.getColumnModel().getColumn(i).setResizable(false);
        }
    }

    public void setZoo(TamaZoo zoo) {
        if (this.zoo != null) {
            this.zoo.removePropertyChangeListener(this);
        }
        this.zoo = zoo;
        if (zoo != null) {
            this.zoo.addPropertyChangeListener(this);
            model.setRowCount(0);
            for (Tamagotchi tama : zoo.getList()) {
                aggiungiRiga(tama);
            }
        }
    }

    private void aggiungiRiga(Tamagotchi tama) {
        Object[] riga = tama.toTableRow();
        riga[0] = new ImageIcon((String) riga[0]);
        model.addRow(riga);
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        switch (evt.getPropertyName()) {
            case TamaZoo.PROP_TAMA ->
                aggiungiTama(evt);
            case TamaZoo.PROP_INDICE ->
                rimuoviTama(evt);
        }

    }

    private void aggiungiTama(PropertyChangeEvent evt) {
        Tamagotchi tama = (Tamagotchi) evt.getNewValue();
        aggiungiRiga(tama);
    }

    private void rimuoviTama(PropertyChangeEvent evt) {
        int indice = (int) evt.getNewValue();
        model.removeRow(indice);
    }

    public int getSelectedRow() {
        return tableTama.getSelectedRow();
    }

    public void addSelectionListener(ListSelectionListener listener) {
        ListSelectionModel selectionModel = tableTama.getSelectionModel();
        selectionModel.addListSelectionListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tableTama = new it.iiscastelli.tama.ui.custom.TabellaCustom();

        tableTama.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Test1", "Test2", "Test3", "Test4"},
                {"Test5", "Test6", "Test7", "Test7"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTama.setFocusable(false);
        tableTama.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        tableTama.setRowHeight(40);
        tableTama.setSelectionBackground(new java.awt.Color(255, 206, 209));
        tableTama.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableTama);
        if (tableTama.getColumnModel().getColumnCount() > 0) {
            tableTama.getColumnModel().getColumn(0).setResizable(false);
            tableTama.getColumnModel().getColumn(1).setResizable(false);
            tableTama.getColumnModel().getColumn(2).setResizable(false);
            tableTama.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private it.iiscastelli.tama.ui.custom.TabellaCustom tableTama;
    // End of variables declaration//GEN-END:variables

}
